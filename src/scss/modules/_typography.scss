/// Font Size Scheme 0.0.1
/// Map for sizes from the font;
/// function for use the sizes;
/// create classes and placeholders.
///
/// @author Allef Silva, Jonas Sousa

/// Map - Font Sizes
/// @type Map
///
/// Use unity better for you(px, em, rem).
///
/// Helper nomeclature.
/// Use a letter(for example x) up until three times. After, use next letter.
$font-sizes: (
  // u = ultra
  uu-large   : 67px,
  u-large    : 48px,
  // h = hiper
  hhh-large  : 44px,
  hh-large   : 36px,
  h-large    : 32px,
  // x = extra
  xxx-large  : 30px,
  xx-large   : 27px,
  x-large    : 24px,
  large      : 20px,

  x-medium   : 18px,
  medium     : 16px, // Your font size base.
  // x = extra
  small      : 14px,
  x-small    : 12px,
  xx-small   : 10px
);
// Mixin de tam. peso e familia de fonte.
@mixin fonts( $bold: 700, $size: 12, $font: $font-default) {
  font: $bold rem($size) $font;
}
/// Function use-fz
/// Use for values extract in map variable $font-sizes.
///
/// @access public
///
/// @param {Number} $size - `Size` value
///
/// @example scss - Use
///   .foo {
///     font-size: use-fz(x-small);
///   }
///
/// @example css - CSS result
///   .foo {
///     font-size: 12px;
///   }
@function use-fz($size){
  @if map-has-key($font-sizes, $size) {
    @return map-get($font-sizes, $size);
  }

  @warn "Unfortunately, no value could be retrieved from `#{size}`. "
        + "Please make sure it is defined in `$font-sizes` map.";
  @return null;
}

/// Mixin make-fz
/// Use for create classes and placeholders in the map $font-sizes.
///
/// @access public
///
/// @param {String} $name - `Name` radical for class
/// Default param 'fz' - Abreviate for the font-size.
@mixin make-fz($name: fz){
  @each $sufix, $value in $font-sizes {
    .#{$name}--#{$sufix},
    %#{$name}--#{$sufix} {
      font-size: use-fz($sufix);
    }
  }
}

/// Prefix for using in the mixin make-fz
///
/// * Necessary use '-'
/// Ex: $prefix : 'df-';
///
/// @type String
///
/// @example scss - Use
///   $prefix : 'df-';
///   @include make-fz($prefix + 'font');
///
/// @example css - CSS result
///   .df-font-x-large {
///     font-size: 24px;
///   }
$prefix : $prefix;

/// Using mixin make-fz
/// Generate classes and placeholders
///
/// @example scss and css - SCSS and CSS result
///   ....
///   %font-medium,
///   .font-medium {
///     font-size: 16px;
///   }
///
///   %font-small {
///   .font-small {
///     font-size: 14px;
///   }
///   ....
@include make-fz($prefix + 'fz');
